---
- name: Install required packages
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - mldonkey-server
    - telnet

- name: Allow mldonkey to run at startup
  replace:
    path: /etc/default/mldonkey-server
    regexp: 'LAUNCH_AT_STARTUP.*'
    after: "LAUNCH_AT_STARTUP\\="
    replace: "true"
  become: yes

# TODO make that working !!!
#- name: Allow access to admin UI from local network
#  lineinfile:
#    path: /var/lib/mldonkey/downloads.ini
#    insertafter: " allowed_ips = [ "
#    line: "        \"192.168.0.0/16\""
#  become: yes

- name: Start mldonkey service
  service:
    name: mldonkey-server
    state: started

- name: Make sure incoming folder is accessible by pi user
  file:
    path: /var/lib/mldonkey/incoming
    mode: 777
    recurse: yes
  become: yes

- name: Check if we should mount incoming folder in home
  stat: 
    path: /home/pi/incoming
  register: incoming_exists


- name: Mount incoming folder in home
  file:
    src: /var/lib/mldonkey/incoming
    dest: /home/pi/incoming
    owner: pi
    group: pi
    state: link
  become: yes
  become_user: pi
  when: incoming_exists.stat.exists == False


- name: Create crontab entry to make sure incoming files can be easily deleted after copy
  cron:
    name: Make downloaded files freely writable
    hour: "0"
    minute: "0"
    weekday: "5"
    job: "chmod -R ugoa+w /home/pi/incoming/"
  become: yes

- name: Create crontab entry to backup downloaded files
  cron:
    name: Backup mldonkey downloads
    hour: "1"
    minute: "0"
    weekday: "5"
    job: "rsync  --remove-source-files -az --copy-dirlinks --log-file=/home/pi/log/rsync_mldonkey.log /home/pi/incoming admin@192.168.0.2:/share/Download/mldonkey"
  become: yes
  become_user: pi
